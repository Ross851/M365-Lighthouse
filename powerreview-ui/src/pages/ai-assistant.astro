---
import Layout from '../layouts/Layout.astro';
---

<Layout title="PowerReview AI Assistant">
	<main class="ai-main">
		<div class="container">
			<div class="ai-header">
				<h1>AI-Powered Security Assistant</h1>
				<p>Leverage AI and MCP servers for automated M365 security assessments</p>
			</div>

			<div class="ai-grid">
				<div class="ai-sidebar">
					<h2>MCP Servers Status</h2>
					<div class="mcp-status-list">
						<div class="mcp-item connected">
							<div class="status-indicator"></div>
							<div class="mcp-info">
								<h3>GitHub</h3>
								<p>Repository management</p>
							</div>
						</div>
						<div class="mcp-item connected">
							<div class="status-indicator"></div>
							<div class="mcp-info">
								<h3>File System</h3>
								<p>Report generation</p>
							</div>
						</div>
						<div class="mcp-item connected">
							<div class="status-indicator"></div>
							<div class="mcp-info">
								<h3>Browser Tools</h3>
								<p>Portal automation</p>
							</div>
						</div>
						<div class="mcp-item">
							<div class="status-indicator"></div>
							<div class="mcp-info">
								<h3>Puppeteer</h3>
								<p>Advanced testing</p>
							</div>
						</div>
						<div class="mcp-item connected">
							<div class="status-indicator"></div>
							<div class="mcp-info">
								<h3>PowerReview AI</h3>
								<p>Assessment engine</p>
							</div>
						</div>
					</div>

					<div class="ai-capabilities">
						<h3>AI Capabilities</h3>
						<ul>
							<li>üîç Automated security scanning</li>
							<li>üìä Intelligent risk analysis</li>
							<li>üõ†Ô∏è Remediation script generation</li>
							<li>üìà Compliance monitoring</li>
							<li>üéØ Best practice comparison</li>
							<li>‚ö° Real-time threat detection</li>
						</ul>
					</div>
				</div>

				<div class="ai-chat">
					<div class="chat-header">
						<h2>Security Assistant</h2>
						<div class="chat-status">
							<span class="status-dot online"></span>
							AI Assistant Ready
						</div>
					</div>

					<div class="chat-messages" id="chat-messages">
						<div class="message assistant">
							<div class="message-avatar">
								<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
									<path d="M12 2L2 7l10 5 10-5-10-5z"/>
									<path d="M2 17l10 5 10-5M2 12l10 5 10-5"/>
								</svg>
							</div>
							<div class="message-content">
								<p>Hello! I'm your AI-powered security assistant. I can help you:</p>
								<ul>
									<li>Run comprehensive M365 security assessments</li>
									<li>Analyze your current security posture</li>
									<li>Generate remediation scripts</li>
									<li>Compare with industry best practices</li>
									<li>Monitor security configuration drift</li>
								</ul>
								<p>What would you like to do today?</p>
							</div>
						</div>
					</div>

					<div class="quick-actions">
						<button class="quick-action" data-action="assess">
							<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
								<path d="M9 11l3 3L22 4"/>
								<path d="M21 12v7a2 2 0 01-2 2H5a2 2 0 01-2-2V5a2 2 0 012-2h11"/>
							</svg>
							Run Assessment
						</button>
						<button class="quick-action" data-action="analyze">
							<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
								<line x1="18" y1="20" x2="18" y2="10"/>
								<line x1="12" y1="20" x2="12" y2="4"/>
								<line x1="6" y1="20" x2="6" y2="14"/>
							</svg>
							Analyze Security
						</button>
						<button class="quick-action" data-action="remediate">
							<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
								<path d="M14 2H6a2 2 0 00-2 2v16a2 2 0 002 2h12a2 2 0 002-2V8z"/>
								<polyline points="14 2 14 8 20 8"/>
								<line x1="16" y1="13" x2="8" y2="13"/>
								<line x1="16" y1="17" x2="8" y2="17"/>
							</svg>
							Generate Script
						</button>
						<button class="quick-action" data-action="compare">
							<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
								<path d="M16 21v-2a4 4 0 00-4-4H5a4 4 0 00-4 4v2"/>
								<circle cx="8.5" cy="7" r="4"/>
								<line x1="23" y1="11" x2="17" y2="11"/>
							</svg>
							Compare Standards
						</button>
					</div>

					<form class="chat-input" id="chat-form">
						<input 
							type="text" 
							id="chat-input" 
							placeholder="Ask me anything about M365 security..."
							autocomplete="off"
						>
						<button type="submit">
							<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
								<line x1="22" y1="2" x2="11" y2="13"/>
								<polygon points="22 2 15 22 11 13 2 9 22 2"/>
							</svg>
						</button>
					</form>
				</div>

				<div class="ai-results">
					<h2>Assessment Results</h2>
					<div class="results-panel" id="results-panel">
						<div class="empty-state">
							<svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
								<rect x="3" y="3" width="18" height="18" rx="2" ry="2"/>
								<line x1="9" y1="9" x2="15" y2="9"/>
								<line x1="9" y1="12" x2="15" y2="12"/>
								<line x1="9" y1="15" x2="11" y2="15"/>
							</svg>
							<p>No results yet. Start an assessment to see findings here.</p>
						</div>
					</div>
				</div>
			</div>
		</div>
	</main>
</Layout>

<style>
	.ai-main {
		min-height: calc(100vh - 140px);
		background: #f8fafc;
		padding: 2rem 1rem;
	}

	.container {
		max-width: 1600px;
		margin: 0 auto;
	}

	.ai-header {
		text-align: center;
		margin-bottom: 3rem;
		animation: fadeInDown 0.6s ease-out;
	}

	@keyframes fadeInDown {
		from { opacity: 0; transform: translateY(-20px); }
		to { opacity: 1; transform: translateY(0); }
	}

	.ai-header h1 {
		font-size: 2.5rem;
		font-weight: 800;
		color: var(--color-dark);
		margin: 0 0 0.5rem;
		background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-clip: text;
	}

	.ai-header p {
		font-size: 1.2rem;
		color: var(--color-gray);
	}

	.ai-grid {
		display: grid;
		grid-template-columns: 280px 1fr 350px;
		gap: 2rem;
		animation: fadeInUp 0.6s ease-out;
	}

	@keyframes fadeInUp {
		from { opacity: 0; transform: translateY(20px); }
		to { opacity: 1; transform: translateY(0); }
	}

	.ai-sidebar {
		background: white;
		border-radius: 16px;
		padding: 1.5rem;
		box-shadow: 0 4px 20px rgba(0, 0, 0, 0.06);
	}

	.ai-sidebar h2 {
		font-size: 1.1rem;
		margin: 0 0 1rem;
		color: var(--color-dark);
	}

	.mcp-status-list {
		display: flex;
		flex-direction: column;
		gap: 0.75rem;
		margin-bottom: 2rem;
	}

	.mcp-item {
		display: flex;
		align-items: center;
		gap: 0.75rem;
		padding: 0.75rem;
		background: #f9fafb;
		border-radius: 8px;
		transition: all 0.3s ease;
	}

	.mcp-item.connected {
		background: #f0fdf4;
	}

	.status-indicator {
		width: 8px;
		height: 8px;
		border-radius: 50%;
		background: #e5e7eb;
		transition: all 0.3s ease;
	}

	.mcp-item.connected .status-indicator {
		background: #10b981;
		box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.2);
		animation: pulse 2s ease-in-out infinite;
	}

	@keyframes pulse {
		0%, 100% { transform: scale(1); opacity: 1; }
		50% { transform: scale(1.1); opacity: 0.8; }
	}

	.mcp-info h3 {
		font-size: 0.9rem;
		margin: 0;
		color: var(--color-dark);
	}

	.mcp-info p {
		font-size: 0.8rem;
		margin: 0;
		color: var(--color-gray);
	}

	.ai-capabilities {
		padding-top: 2rem;
		border-top: 1px solid #e5e7eb;
	}

	.ai-capabilities h3 {
		font-size: 1rem;
		margin: 0 0 1rem;
		color: var(--color-dark);
	}

	.ai-capabilities ul {
		list-style: none;
		padding: 0;
		margin: 0;
	}

	.ai-capabilities li {
		padding: 0.5rem 0;
		color: #4b5563;
		font-size: 0.9rem;
	}

	.ai-chat {
		background: white;
		border-radius: 16px;
		box-shadow: 0 4px 20px rgba(0, 0, 0, 0.06);
		display: flex;
		flex-direction: column;
		height: 600px;
	}

	.chat-header {
		padding: 1.5rem;
		border-bottom: 1px solid #e5e7eb;
		display: flex;
		justify-content: space-between;
		align-items: center;
	}

	.chat-header h2 {
		margin: 0;
		font-size: 1.3rem;
		color: var(--color-dark);
	}

	.chat-status {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		font-size: 0.9rem;
		color: #6b7280;
	}

	.status-dot {
		width: 8px;
		height: 8px;
		border-radius: 50%;
		background: #e5e7eb;
	}

	.status-dot.online {
		background: #10b981;
	}

	.chat-messages {
		flex: 1;
		overflow-y: auto;
		padding: 1.5rem;
		display: flex;
		flex-direction: column;
		gap: 1rem;
	}

	.message {
		display: flex;
		gap: 1rem;
		animation: slideIn 0.3s ease-out;
	}

	@keyframes slideIn {
		from { opacity: 0; transform: translateX(-10px); }
		to { opacity: 1; transform: translateX(0); }
	}

	.message.user {
		flex-direction: row-reverse;
	}

	.message-avatar {
		width: 40px;
		height: 40px;
		background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
		border-radius: 10px;
		display: flex;
		align-items: center;
		justify-content: center;
		color: white;
		flex-shrink: 0;
	}

	.message.user .message-avatar {
		background: #3b82f6;
	}

	.message-content {
		max-width: 70%;
		padding: 1rem 1.25rem;
		background: #f3f4f6;
		border-radius: 12px;
		color: var(--color-dark);
		line-height: 1.6;
	}

	.message.user .message-content {
		background: #3b82f6;
		color: white;
	}

	.message-content ul {
		margin: 0.5rem 0 0;
		padding-left: 1.5rem;
	}

	.quick-actions {
		padding: 1rem;
		border-bottom: 1px solid #e5e7eb;
		display: flex;
		gap: 0.5rem;
		overflow-x: auto;
	}

	.quick-action {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		padding: 0.5rem 1rem;
		background: #f9fafb;
		border: 1px solid #e5e7eb;
		border-radius: 8px;
		font-size: 0.9rem;
		color: #4b5563;
		cursor: pointer;
		transition: all 0.3s ease;
		white-space: nowrap;
	}

	.quick-action:hover {
		background: var(--color-primary);
		color: white;
		border-color: var(--color-primary);
	}

	.chat-input {
		padding: 1rem;
		display: flex;
		gap: 0.75rem;
		align-items: center;
		border-top: 1px solid #e5e7eb;
	}

	.chat-input input {
		flex: 1;
		padding: 0.75rem 1rem;
		border: 2px solid #e5e7eb;
		border-radius: 10px;
		font-size: 1rem;
		transition: all 0.3s ease;
	}

	.chat-input input:focus {
		outline: none;
		border-color: var(--color-primary);
	}

	.chat-input button {
		width: 44px;
		height: 44px;
		background: var(--color-primary);
		color: white;
		border: none;
		border-radius: 10px;
		display: flex;
		align-items: center;
		justify-content: center;
		cursor: pointer;
		transition: all 0.3s ease;
	}

	.chat-input button:hover {
		background: var(--color-primary-dark);
		transform: scale(1.05);
	}

	.ai-results {
		background: white;
		border-radius: 16px;
		padding: 1.5rem;
		box-shadow: 0 4px 20px rgba(0, 0, 0, 0.06);
	}

	.ai-results h2 {
		font-size: 1.1rem;
		margin: 0 0 1rem;
		color: var(--color-dark);
	}

	.results-panel {
		min-height: 400px;
	}

	.empty-state {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		min-height: 400px;
		color: #9ca3af;
	}

	.empty-state svg {
		margin-bottom: 1rem;
		opacity: 0.5;
	}

	/* Results styling */
	.result-card {
		background: #f9fafb;
		border-radius: 12px;
		padding: 1rem;
		margin-bottom: 1rem;
		border-left: 4px solid var(--color-primary);
		animation: slideIn 0.3s ease-out;
	}

	.result-card.critical {
		border-left-color: #ef4444;
		background: #fef2f2;
	}

	.result-card.high {
		border-left-color: #f59e0b;
		background: #fffbeb;
	}

	.result-card h4 {
		margin: 0 0 0.5rem;
		color: var(--color-dark);
		font-size: 1rem;
	}

	.result-card p {
		margin: 0;
		color: #6b7280;
		font-size: 0.9rem;
		line-height: 1.5;
	}

	/* Scrollbar styling */
	.chat-messages::-webkit-scrollbar {
		width: 6px;
	}

	.chat-messages::-webkit-scrollbar-track {
		background: #f3f4f6;
	}

	.chat-messages::-webkit-scrollbar-thumb {
		background: #d1d5db;
		border-radius: 3px;
	}

	.chat-messages::-webkit-scrollbar-thumb:hover {
		background: #9ca3af;
	}

	@media (max-width: 1200px) {
		.ai-grid {
			grid-template-columns: 1fr;
		}

		.ai-sidebar {
			order: 3;
		}

		.ai-results {
			order: 2;
		}
	}
</style>

<script>
	// Check auth
	if (!localStorage.getItem('powerreview_auth')) {
		window.location.href = '/login';
	}

	const chatMessages = document.getElementById('chat-messages');
	const chatInput = document.getElementById('chat-input') as HTMLInputElement;
	const chatForm = document.getElementById('chat-form');
	const resultsPanel = document.getElementById('results-panel');

	// Quick actions
	document.querySelectorAll('.quick-action').forEach(button => {
		button.addEventListener('click', (e) => {
			const action = (e.currentTarget as HTMLElement).dataset.action;
			handleQuickAction(action!);
		});
	});

	// Chat form submission
	chatForm?.addEventListener('submit', async (e) => {
		e.preventDefault();
		const message = chatInput.value.trim();
		
		if (!message) return;
		
		// Add user message
		addMessage('user', message);
		chatInput.value = '';
		
		// Process message
		await processUserMessage(message);
	});

	function addMessage(type: 'user' | 'assistant', content: string) {
		const messageDiv = document.createElement('div');
		messageDiv.className = `message ${type}`;
		
		const avatar = document.createElement('div');
		avatar.className = 'message-avatar';
		avatar.innerHTML = type === 'assistant' ? 
			`<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
				<path d="M12 2L2 7l10 5 10-5-10-5z"/>
				<path d="M2 17l10 5 10-5M2 12l10 5 10-5"/>
			</svg>` : 
			`<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
				<path d="M20 21v-2a4 4 0 00-4-4H8a4 4 0 00-4 4v2"/>
				<circle cx="12" cy="7" r="4"/>
			</svg>`;
		
		const contentDiv = document.createElement('div');
		contentDiv.className = 'message-content';
		contentDiv.innerHTML = `<p>${content}</p>`;
		
		messageDiv.appendChild(avatar);
		messageDiv.appendChild(contentDiv);
		
		chatMessages?.appendChild(messageDiv);
		chatMessages?.scrollTo(0, chatMessages.scrollHeight);
	}

	async function processUserMessage(message: string) {
		// Simulate AI processing
		setTimeout(() => {
			let response = '';
			
			if (message.toLowerCase().includes('assess') || message.toLowerCase().includes('scan')) {
				response = "I'll run a comprehensive security assessment for you. Starting the scan now...";
				simulateAssessment();
			} else if (message.toLowerCase().includes('mfa') || message.toLowerCase().includes('multi-factor')) {
				response = "MFA Analysis: Currently 12 users (12%) don't have MFA enabled. This is a critical security risk. Would you like me to generate a remediation script?";
				showMFAResult();
			} else if (message.toLowerCase().includes('remediate') || message.toLowerCase().includes('fix')) {
				response = "I'll generate PowerShell scripts to fix the identified issues. Here's the remediation plan...";
				showRemediationScript();
			} else if (message.toLowerCase().includes('compare') || message.toLowerCase().includes('best practice')) {
				response = "Comparing your configuration with Microsoft best practices... Your compliance score is 75%. Here are the gaps I found:";
				showComplianceGaps();
			} else {
				response = "I can help you with:\n‚Ä¢ Running security assessments\n‚Ä¢ Analyzing specific services\n‚Ä¢ Generating remediation scripts\n‚Ä¢ Comparing with best practices\n\nWhat would you like to focus on?";
			}
			
			addMessage('assistant', response);
		}, 1000);
	}

	function handleQuickAction(action: string) {
		switch (action) {
			case 'assess':
				chatInput.value = "Run a comprehensive M365 security assessment";
				break;
			case 'analyze':
				chatInput.value = "Analyze my Azure AD security posture";
				break;
			case 'remediate':
				chatInput.value = "Generate remediation scripts for critical issues";
				break;
			case 'compare':
				chatInput.value = "Compare my configuration with Microsoft best practices";
				break;
		}
		chatForm?.dispatchEvent(new Event('submit'));
	}

	function simulateAssessment() {
		resultsPanel!.innerHTML = `
			<div class="result-card">
				<h4>Assessment Running...</h4>
				<p>Scanning Azure AD configuration...</p>
			</div>
		`;
		
		setTimeout(() => {
			resultsPanel!.innerHTML = `
				<div class="result-card critical">
					<h4>Critical: MFA Not Enforced</h4>
					<p>12 users lack multi-factor authentication</p>
				</div>
				<div class="result-card high">
					<h4>High: Excessive Global Admins</h4>
					<p>5 global admin accounts detected (recommended: 2-3)</p>
				</div>
				<div class="result-card">
					<h4>Medium: External Sharing</h4>
					<p>SharePoint external sharing is unrestricted</p>
				</div>
			`;
			
			addMessage('assistant', "Assessment complete! I found 3 critical issues and 5 high-priority issues. Check the results panel for details.");
		}, 3000);
	}

	function showMFAResult() {
		resultsPanel!.innerHTML = `
			<div class="result-card critical">
				<h4>MFA Coverage Analysis</h4>
				<p><strong>Users without MFA:</strong> 12 (12%)</p>
				<p><strong>Risk Level:</strong> Critical</p>
				<p><strong>Affected Users:</strong></p>
				<ul style="margin-top: 0.5rem; font-size: 0.85rem;">
					<li>user1@contoso.com</li>
					<li>user2@contoso.com</li>
					<li>... and 10 more</li>
				</ul>
			</div>
		`;
	}

	function showRemediationScript() {
		resultsPanel!.innerHTML = `
			<div class="result-card">
				<h4>PowerShell Remediation Script</h4>
				<pre style="background: #1e293b; color: #e2e8f0; padding: 1rem; border-radius: 8px; overflow-x: auto; font-size: 0.85rem;">
# Enable MFA for all users
Connect-MsolService
$users = Get-MsolUser -All | Where {$_.StrongAuth...}
foreach ($user in $users) {
    Set-MsolUser -UserPrincipalName $user.UPN ...
}

# Reduce Global Admin count
# Review and reassign roles...
</pre>
			</div>
		`;
	}

	function showComplianceGaps() {
		resultsPanel!.innerHTML = `
			<div class="result-card">
				<h4>Compliance Analysis - Microsoft Best Practices</h4>
				<p><strong>Compliance Score:</strong> 75%</p>
				<div style="margin-top: 1rem;">
					<p style="color: #ef4444;">‚ùå MFA not enforced for all users</p>
					<p style="color: #ef4444;">‚ùå Too many global administrators</p>
					<p style="color: #f59e0b;">‚ö†Ô∏è External sharing too permissive</p>
					<p style="color: #10b981;">‚úÖ ATP policies configured</p>
					<p style="color: #10b981;">‚úÖ Audit logging enabled</p>
				</div>
			</div>
		`;
	}
</script>